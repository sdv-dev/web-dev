{"version":3,"sources":["webpack://sdv-dev/./src/components/FeaturedArticleWrap.js","webpack://sdv-dev/./src/components/FeaturedArticle.js","webpack://sdv-dev/./src/components/AllArticlesWrap.js","webpack://sdv-dev/./src/templates/index.js"],"names":["FeaturedArticle","children","StaticQuery","query","render","data","className","style","boxShadow","fadeIn","fluid","afterImage","childImageSharp","alt","post","featuredImg","title","href","slug","src","feature_image","AuthorCard","excerpt","width","icon","faArrowRight","AllArticlesWrap","location","pageContext","posts","allGhostPost","edges","tags","allGhostTag","featuredPost","map","i","node","filter","featured","isHome","pathname","Link","key","id","to","name"],"mappings":"0MAIe,SAASA,EAAT,GAAsC,IAAZC,EAAW,EAAXA,SAEvC,OACE,gBAAC,EAAAC,YAAD,CACEC,MAAK,aAYLC,OAAQ,SAACC,GACP,OACE,uBACEC,UAAU,2CACVC,MAAO,CACLC,UAAW,+CAGb,uBAAKF,UAAU,gDACb,gBAAC,IAAD,CACEG,QAAQ,EACRC,MAAOL,EAAKM,WAAWC,gBAAgBF,MACvCG,IAAI,eACJP,UAAU,MAIXL,M,iCC5BA,SAASD,EAAT,GAAiD,IAAtBc,EAAqB,EAArBA,KAAqB,EAAfC,YAC5C,OACI,gCACI,uBAAKT,UAAU,8CACX,qBACIU,MAAOF,EAAKE,MACZC,KAAMH,EAAKI,KACXZ,UAAU,gPAKV,uBAAKA,UAAU,iEAAgE,uBAAKa,IAAKL,EAAKM,cAAed,UAAU,+DAA+DO,IAAKC,EAAKE,UAEpM,uBACIV,UAAU,kOAQV,gBAACe,EAAA,EAAD,CAAYP,KAAMA,IAClB,qBAAGR,UAAU,YAAYW,KAAMH,EAAKI,KAAMF,MAAOF,EAAKE,OAClD,sBAAIV,UAAU,sCACTQ,EAAKE,MAAO,KAEjB,qBAAGV,UAAU,uCACRQ,EAAKQ,SAEV,yBACI,uBACIhB,UAAU,sCADd,YAGc,IACV,gBAAC,IAAD,CAAiBiB,MAAM,KAAKC,KAAMC,aAlC1D,KCPO,SAASC,EAAT,GAAwC,IAAbzB,EAAY,EAAZA,SACtC,OACI,gBAAC,EAAAC,YAAD,CACIC,MAAK,aAgCLC,OAAQ,SAACC,GACL,OACI,uBAAKC,UAAU,iBACX,uBAAKA,UAAU,wDACX,uBAAKA,UAAU,oCACX,uBAAKA,UAAU,sCACX,gBAAC,IAAD,CACIG,QAAQ,EACRC,MACIL,EAAKM,WAAWC,gBACXF,MAETG,IAAI,eACJP,UAAU,MAGlB,0CACA,uBAAKA,UAAU,8CAEnB,uBAAKA,UAAU,yBACVL,QCxCjC,IAkEA,EAlEc,SAAC,GAAqC,IAAnCI,EAAkC,EAAlCA,KAAMsB,EAA4B,EAA5BA,SAAUC,EAAkB,EAAlBA,YACvBC,EAAQxB,EAAKyB,aAAaC,MAC1BC,EAAO3B,EAAK4B,YAAYF,MAIxBG,EAFWL,EAAMM,KAAK,SAAAC,GAAC,OAAIA,EAAEC,QAELC,QAAQ,SAAAF,GAAC,OAAmB,IAAfA,EAAEG,YAAoB,GAEjE,OACI,gCACI,gBAAC,IAAD,CAAUZ,SAAUA,IACpB,gBAAC,KAAD,CAAQa,QAAQ,GACZ,uBAAKlC,UAAU,aACY,MAAtBqB,EAASc,UAA0C,cAAtBd,EAASc,UAAkD,WAAtBd,EAASc,SACxE,gCACI,sBAAInC,UAAU,4DAAd,oBAGA,gBAACN,EAAD,KACI,gBAAC,EAAD,CAAiBc,KAAMoB,MANlC,GAaD,gBAACR,EAAD,KAESM,EAAKG,KAAI,gBAAGE,EAAH,EAAGA,KAAH,OAEN,gBAAC,EAAAK,KAAD,CACIC,IAAKN,EAAKO,GACVC,GAAE,QAAUR,EAAKnB,KACjBZ,UAAU,oFAET+B,EAAKS,UAMtB,2BAASxC,UAAU,wBACduB,EAAMM,KAAI,gBAAGE,EAAH,EAAGA,KAAH,OAEP,gCACA,gBAAC,KAAD,CAAUM,IAAKN,EAAKO,GAAI9B,KAAMuB,SAItC,gBAAC,KAAD,CAAYT,YAAaA","file":"component---src-templates-index-js-65665a40f5634cb0e8d4.js","sourcesContent":["import React from \"react\";\nimport { StaticQuery, graphql } from \"gatsby\";\nimport Img from \"gatsby-image\";\n\nexport default function FeaturedArticle({children}) {\n  \n  return (\n    <StaticQuery\n      query={graphql`\n        query FeaturedArticleWrap {\n          afterImage: file(relativePath: { eq: \"dotted graphics 2.png\" }) {\n            childImageSharp {\n              fluid {\n                ...GatsbyImageSharpFluid_noBase64\n              }\n            }\n            id\n          }\n        }\n      `}\n      render={(data) => {\n        return (\n          <div\n            className=\"flex flex-wrap rounded-10 relative mb-28\"\n            style={{\n              boxShadow: \"0px 6px 40px rgba(153, 158, 178, 0.277153)\",\n            }}\n          >\n            <div className=\"absolute -right-11 top-10 bottom-10 z-0 w-28\">\n              <Img\n                fadeIn={true}\n                fluid={data.afterImage.childImageSharp.fluid}\n                alt=\"graphic dots\"\n                className=\"\"\n              />\n            </div>\n            \n              {children}\n            \n          </div>\n        );\n      }}\n    />\n  );\n}\n","import React from \"react\";\nimport { Link } from \"gatsby\";\nimport Img from \"gatsby-image\";\n\nimport AuthorCard from \"./AuthorCard\"\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faArrowRight } from \"@fortawesome/free-solid-svg-icons\";\n\nexport default function FeaturedArticle({ post, featuredImg }) {\n    return (\n        <>\n            <div className=\" flex flex-wrap rounded-10 relative w-full\">\n                <a\n                    title={post.title}\n                    href={post.slug} \n                    className=\"w-full md:w-5/12 overflow-hidden\n                  rounded-tl-10 md:rounded-bl-10 rounded-tr-10 md:rounded-tr-none\n                  border border-t-stroke border-b-none md:border-b-stroke border-l-stroke border-r-stroke md:border-r-0\n                  bg-white justify-center relative z-10\"\n                >\n                    <div className=\"w-full feature-image relative h-full pb-pimg-sm md:pb-pimg-md\"><img src={post.feature_image} className=\"absolute inset-0 md:w-full h-full object-cover object-center\" alt={post.title}></img></div>\n                </a>\n                <div\n                    className=\"bg-white w-full md:w-7/12 xl:pl-28\n                lg:pl-20 md:pl-5 md:pr-5 lg:pr-10 pr-5 pl-5 md:py-10 py-5\n                md:rounded-r-10\n                md:rounded-bl-none\n                rounded-bl-10 rounded-br-10\n                border-r border-b border-l border-t-none md:border-t\n                relative z-10\"\n                >\n                    <AuthorCard post={post} />\n                    <a className=\"link-wrap\" href={post.slug} title={post.title}>\n                        <h3 className=\"text-sdv-heading mb-4 leading-none\">\n                            {post.title}{\" \"}\n                        </h3>\n                        <p className=\"text-sdv-subheading font-light mb-3\">\n                            {post.excerpt}\n                        </p>\n                        <p>\n                            <div\n                                className=\"read-more font-bold cursor-pointer\"\n                            >\n                                Read more{\" \"}\n                                <FontAwesomeIcon width=\"16\" icon={faArrowRight} />\n                            </div>\n                        </p>\n                    </a>\n                </div>\n            </div> </>\n    );\n}\n","import React from \"react\";\nimport { StaticQuery, graphql } from \"gatsby\";\nimport Img from \"gatsby-image\";\n\nexport default function AllArticlesWrap({ children }) {\n    return (\n        <StaticQuery\n            query={graphql`\n                query AllArticles {\n                    featuredImage: file(\n                        relativePath: { eq: \"featured-article.png\" }\n                    ) {\n                        childImageSharp {\n                            fixed(height: 170, width: 170) {\n                                ...GatsbyImageSharpFixed_noBase64\n                            }\n                        }\n                        id\n                    }\n                    authorImage: file(relativePath: { eq: \"carles.jpg\" }) {\n                        childImageSharp {\n                            fixed(height: 46, width: 46) {\n                                ...GatsbyImageSharpFixed_noBase64\n                            }\n                        }\n                        id\n                    }\n                    afterImage: file(\n                        relativePath: { eq: \"dotted graphics.png\" }\n                    ) {\n                        childImageSharp {\n                            fluid {\n                                ...GatsbyImageSharpFluid_noBase64\n                            }\n                        }\n                        id\n                    }\n                }\n            `}\n            render={(data) => {\n                return (\n                    <div className=\"mb-8 lg:mb-14\">\n                        <div className=\"flex flex-wrap justify-center md:justify-start -mx-6\">\n                            <div className=\"w-auto flex-shrink px-6 relative\">\n                                <div className=\"absolute -left-4 bottom-7 z-0 w-20\">\n                                    <Img\n                                        fadeIn={true}\n                                        fluid={\n                                            data.afterImage.childImageSharp\n                                                .fluid\n                                        }\n                                        alt=\"graphic dots\"\n                                        className=\"\"\n                                    />\n                                </div>\n                                <h3>All Articles</h3>\n                                <div className=\"w-20 h-0.5 bg-sdv-highlight mb-6 md:mb-0\"></div>\n                            </div>\n                            <div className=\"w-auto flex-grow px-6\">\n                                {children}\n                            </div>\n                        </div>\n                    </div>\n                );\n            }}\n        />\n    );\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { graphql, Link } from \"gatsby\";\n\nimport { Layout, PostCard, Pagination } from \"../components/common\";\nimport { MetaData } from \"../components/common/meta\";\n\nimport FeaturedArticleWrap from \"../components/FeaturedArticleWrap\";\nimport FeaturedArticle from \"../components/FeaturedArticle\";\nimport AllArticlesWrap from \"../components/AllArticlesWrap\";\n\n/**\n * Main index page (home page)\n *\n * Loads all posts from Ghost and uses pagination to navigate through them.\n * The number of posts that should appear per page can be setup\n * in /utils/siteConfig.js under `postsPerPage`.\n *\n */\nconst Index = ({ data, location, pageContext }) => {\n    const posts = data.allGhostPost.edges;\n    const tags = data.allGhostTag.edges;\n\n    const allPosts = posts.map( i => i.node )\n    \n    const featuredPost = allPosts.filter( i => i.featured === true )[0]\n\n    return (\n        <>\n            <MetaData location={location} />\n            <Layout isHome={true}>\n                <div className=\"container\">\n                    {location.pathname === \"/\" || location.pathname === \"/web-dev/\" || location.pathname === \"/blog/\" ? (\n                        <>\n                            <h2 className=\"mb-10 lg:mb-14 lg:text-left text-center text-sdv-heading\">\n                                Featured Article\n                            </h2>\n                            <FeaturedArticleWrap>\n                                <FeaturedArticle post={featuredPost} />\n                            </FeaturedArticleWrap>\n                        </>\n                    ) : (\n                        ``\n                    )}\n\n                    <AllArticlesWrap>\n                        \n                            {tags.map(({ node }) => (\n                                // The tag below includes the markup for each post - components/common/PostCard.js\n                                <Link\n                                    key={node.id}\n                                    to={`/tag/${node.slug}`}\n                                    className=\"mb-2 border border-sdv-stroke rounded-full inline-block px-6 py-3 shadow-lg mr-4\"\n                                >\n                                    {node.name}\n                                </Link>\n                            ))}\n                        \n                    </AllArticlesWrap>\n\n                    <section className=\"flex flex-wrap -mx-6\">\n                        {posts.map(({ node }) => (\n                            // The tag below includes the markup for each post - components/common/PostCard.js\n                            <>\n                            <PostCard key={node.id} post={node} />\n                            </>\n                        ))}\n                    </section>\n                    <Pagination pageContext={pageContext} />\n                </div>\n            </Layout>\n        </>\n    );\n};\n\nIndex.propTypes = {\n    data: PropTypes.shape({\n        allGhostPost: PropTypes.object.isRequired,\n    }).isRequired,\n    location: PropTypes.shape({\n        pathname: PropTypes.string.isRequired,\n    }).isRequired,\n    pageContext: PropTypes.object,\n};\n\nexport default Index;\n\n// This page query loads all posts sorted descending by published date\n// The `limit` and `skip` values are used for pagination\nexport const pageQuery = graphql`\n    query GhostPostQuery($limit: Int!, $skip: Int!) {\n        allGhostPost(\n            sort: { order: DESC, fields: [published_at] }\n            limit: $limit\n            skip: $skip\n        ) {\n            edges {\n                node {\n                    ...GhostPostFields\n                }\n            }\n        }\n        featured: allGhostPost(filter: {featured: {eq: true}}, limit: 1) {\n            edges {\n            node {\n                featured\n                id\n                excerpt\n                updated_at(formatString: \"MMMM DD, YYYY\")\n                title\n                slug\n                published_at(formatString: \"MMMM DD, YYYY\")\n                published_at_pretty: published_at(formatString: \"DD MMMM, YYYY\")\n                authors {\n                bio\n                cover_image\n                name\n                profile_image\n                url\n                }\n                primary_author {\n                    name\n                    slug\n                    bio\n                    # email\n                    profile_image\n                    twitter\n                    facebook\n                    website\n                }\n                meta_description\n                meta_title\n                feature_image\n            }\n            }\n        }\n        allGhostTag {\n            edges {\n                node {\n                    ...GhostTagFields\n                }\n            }\n        }\n    }\n`;\n"],"sourceRoot":""}