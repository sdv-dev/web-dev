{"version":3,"sources":["webpack://sdv-dev/./src/templates/tag.js"],"names":["data","location","pageContext","tag","ghostTag","posts","allGhostPost","edges","type","hasMoreArticles","className","style","background","name","description","map","node","key","id","post"],"mappings":"gJAuEA,UA1DY,SAAC,GAAqC,IAAnCA,EAAkC,EAAlCA,KAAMC,EAA4B,EAA5BA,SAAUC,EAAkB,EAAlBA,YACrBC,EAAMH,EAAKI,SACXC,EAAQL,EAAKM,aAAaC,MAEhC,OACI,gCACI,gBAAC,IAAD,CACIP,KAAMA,EACNC,SAAUA,EACVO,KAAK,WAET,gBAAC,KAAD,CAASC,iBAAiB,GAC1B,uBAAKC,UAAU,UACX,uBAAKA,UAAU,sDAAsDC,MAAO,CAACC,WAAY,wDACrF,uBAAKF,UAAU,qBACX,uBAAKA,UAAU,oDACX,uBAAKA,UAAU,wDACX,sBAAIA,UAAU,iDACTP,EAAIU,MAERV,EAAIW,YAAc,qBAAGJ,UAAU,6BAC3BP,EAAIW,aACF,UAOvB,uBAAKJ,UAAU,aAEX,2BAASA,UAAU,8BACdL,EAAMU,KAAI,gBAAGC,EAAH,EAAGA,KAAH,OAEP,gBAAC,KAAD,CAAUC,IAAKD,EAAKE,GAAIC,KAAMH,QAGtC,gBAAC,KAAD,CAAYd,YAAaA","file":"component---src-templates-tag-js-46f568dab211b134a42c.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport { graphql } from 'gatsby'\n\nimport { PostCard, Pagination, Article } from '../components/common'\nimport { MetaData } from '../components/common/meta'\n\n/**\n* Tag page (/tag/:slug)\n*\n* Loads all posts for the requested tag incl. pagination.\n*\n*/\nconst Tag = ({ data, location, pageContext }) => {\n    const tag = data.ghostTag\n    const posts = data.allGhostPost.edges\n\n    return (\n        <>\n            <MetaData\n                data={data}\n                location={location}\n                type=\"series\"\n            />\n            <Article hasMoreArticles={false}>\n            <div className=\" pt-20\">\n                <div className=\"bg-sdv-highlight w-full feature-image relative py-6\" style={{background: 'linear-gradient(90deg, #03B0F2 1.57%, #01E0C9 100%)'}}>\n                    <div className=\"container mx-auto\">\n                        <div className=\"flex flex-wrap -mx-6 justify-center items-center\">\n                            <div className=\"w-full lg:w-8/12 px-6 md:mt-0 text-white text-center\">\n                                <h1 className=\"leading-none text-white text-6xl lg:text-8xl \">\n                                    {tag.name}\n                                </h1>\n                                {tag.description ? <p className=\"text-xl mt-3 leading-snug\">\n                                    {tag.description}\n                                </p> : null }\n                \n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n                <div className=\"container\">\n                    \n                    <section className=\"flex flex-wrap -mx-6 pt-12\">\n                        {posts.map(({ node }) => (\n                            // The tag below includes the markup for each post - components/common/PostCard.js\n                            <PostCard key={node.id} post={node} />\n                        ))}\n                    </section>\n                    <Pagination pageContext={pageContext} />\n                </div>\n            </Article>\n        </>\n    )\n}\n\nTag.propTypes = {\n    data: PropTypes.shape({\n        ghostTag: PropTypes.shape({\n            name: PropTypes.string.isRequired,\n            description: PropTypes.string,\n        }),\n        allGhostPost: PropTypes.object.isRequired,\n    }).isRequired,\n    location: PropTypes.shape({\n        pathname: PropTypes.string.isRequired,\n    }).isRequired,\n    pageContext: PropTypes.object,\n}\n\nexport default Tag\n\nexport const pageQuery = graphql`\n    query GhostTagQuery($slug: String!, $limit: Int!, $skip: Int!) {\n        ghostTag(slug: { eq: $slug }) {\n            ...GhostTagFields\n        }\n        allGhostPost(\n            sort: { order: DESC, fields: [published_at] },\n            filter: {tags: {elemMatch: {slug: {eq: $slug}}}},\n            limit: $limit,\n            skip: $skip\n        ) {\n            edges {\n                node {\n                ...GhostPostFields\n                }\n            }\n        }\n    }\n`\n"],"sourceRoot":""}